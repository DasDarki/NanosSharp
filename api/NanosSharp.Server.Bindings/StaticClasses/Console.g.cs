// Autogenerated by the NanosSharp Server Bindings Generator (c) 2025 DasDarki / GPLv3

using NanosSharp.API;

namespace NanosSharp.Server.Bindings;

public static class BConsole
{
    public static void Log(ILuaVM vm, string message, params object[] args)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Console");
        vm.GetField(-1, "Log");
        pc++;
        vm.PushString(message);
        foreach (var a in args) {
            pc++;
            vm.PushObject(a);
        }
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void Warn(ILuaVM vm, string message, params object[] args)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Console");
        vm.GetField(-1, "Warn");
        pc++;
        vm.PushString(message);
        foreach (var a in args) {
            pc++;
            vm.PushObject(a);
        }
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void Error(ILuaVM vm, string message, params object[] args)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Console");
        vm.GetField(-1, "Error");
        pc++;
        vm.PushString(message);
        foreach (var a in args) {
            pc++;
            vm.PushObject(a);
        }
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void RegisterCommand(ILuaVM vm, string command, ILuaVM.CFunction callback, string description, string[] parameters)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Console");
        vm.GetField(-1, "RegisterCommand");
        pc++;
        vm.PushString(command);
        pc++;
        vm.PushManagedFunction(callback);
        pc++;
        vm.PushString(description);
        pc++;
        vm.PushArray(parameters);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void RunCommand(ILuaVM vm, string command)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Console");
        vm.GetField(-1, "RunCommand");
        pc++;
        vm.PushString(command);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

}

