// Autogenerated by the NanosSharp Server Bindings Generator (c) 2022 DasDarki / GPLv3

using NanosSharp.API;

namespace NanosSharp.Server.Bindings;

public static class Assets
{
    public static Dictionary<string, object>[] GetAssetPacks(ILuaVM vm)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "GetAssetPacks");
        vm.MCall(pc, 1);
        var r0 = vm.ToArray<Dictionary<string, object>>(-1);
        vm.ClearStack();
        return r0;
    }

    public static string GetAssetPath(ILuaVM vm, string asset, AssetType asset_type)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "GetAssetPath");
        pc++;
        vm.PushString(asset);
        pc++;
        vm.PushEnum(asset_type);
        vm.MCall(pc, 1);
        var r0 = vm.ToString(-1);
        vm.Pop();
        vm.ClearStack();
        return r0;
    }

    public static Dictionary<string, object>[] GetAnimations(ILuaVM vm, string asset_pack_path)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "GetAnimations");
        pc++;
        vm.PushString(asset_pack_path);
        vm.MCall(pc, 1);
        var r0 = vm.ToArray<Dictionary<string, object>>(-1);
        vm.ClearStack();
        return r0;
    }

    public static Dictionary<string, object>[] GetBlueprints(ILuaVM vm, string asset_pack_path)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "GetBlueprints");
        pc++;
        vm.PushString(asset_pack_path);
        vm.MCall(pc, 1);
        var r0 = vm.ToArray<Dictionary<string, object>>(-1);
        vm.ClearStack();
        return r0;
    }

    public static Dictionary<string, object>[] GetMaps(ILuaVM vm, string asset_pack_path)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "GetMaps");
        pc++;
        vm.PushString(asset_pack_path);
        vm.MCall(pc, 1);
        var r0 = vm.ToArray<Dictionary<string, object>>(-1);
        vm.ClearStack();
        return r0;
    }

    public static Dictionary<string, object>[] GetMaterials(ILuaVM vm, string asset_pack_path)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "GetMaterials");
        pc++;
        vm.PushString(asset_pack_path);
        vm.MCall(pc, 1);
        var r0 = vm.ToArray<Dictionary<string, object>>(-1);
        vm.ClearStack();
        return r0;
    }

    public static Dictionary<string, object>[] GetParticles(ILuaVM vm, string asset_pack_path)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "GetParticles");
        pc++;
        vm.PushString(asset_pack_path);
        vm.MCall(pc, 1);
        var r0 = vm.ToArray<Dictionary<string, object>>(-1);
        vm.ClearStack();
        return r0;
    }

    public static Dictionary<string, object>[] GetSounds(ILuaVM vm, string asset_pack_path)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "GetSounds");
        pc++;
        vm.PushString(asset_pack_path);
        vm.MCall(pc, 1);
        var r0 = vm.ToArray<Dictionary<string, object>>(-1);
        vm.ClearStack();
        return r0;
    }

    public static Dictionary<string, object>[] GetSkeletalMeshes(ILuaVM vm, string asset_pack_path)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "GetSkeletalMeshes");
        pc++;
        vm.PushString(asset_pack_path);
        vm.MCall(pc, 1);
        var r0 = vm.ToArray<Dictionary<string, object>>(-1);
        vm.ClearStack();
        return r0;
    }

    public static Dictionary<string, object>[] GetStaticMeshes(ILuaVM vm, string asset_pack_path)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "GetStaticMeshes");
        pc++;
        vm.PushString(asset_pack_path);
        vm.MCall(pc, 1);
        var r0 = vm.ToArray<Dictionary<string, object>>(-1);
        vm.ClearStack();
        return r0;
    }

    public static Dictionary<string, object>[] GetOthers(ILuaVM vm, string asset_pack_path)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "GetOthers");
        pc++;
        vm.PushString(asset_pack_path);
        vm.MCall(pc, 1);
        var r0 = vm.ToArray<Dictionary<string, object>>(-1);
        vm.ClearStack();
        return r0;
    }

    public static void Precache(ILuaVM vm, string asset_path, AssetType asset_type)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "Precache");
        pc++;
        vm.PushString(asset_path);
        pc++;
        vm.PushEnum(asset_type);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

}

