// Autogenerated by the NanosSharp Server Bindings Generator (c) 2022 DasDarki / GPLv3

using NanosSharp.API;

namespace NanosSharp.Server.Bindings;

public static class Assets
{
    public static Dictionary<string, object>[] GetAssetPacks(ILuaVM vm, string asset_pack_path)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetAssetPacks");
        pc++;
        vm.PushString(asset_pack_path);
        vm.MCall(pc, 1);
        vm.ClearStack();
        return r0;
    }

    public static string[] GetAnimations(ILuaVM vm, string asset_pack_path)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetAnimations");
        pc++;
        vm.PushString(asset_pack_path);
        vm.MCall(pc, 1);
        vm.ClearStack();
        return r0;
    }

    public static string[] GetBlueprints(ILuaVM vm, string asset_pack_path)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetBlueprints");
        pc++;
        vm.PushString(asset_pack_path);
        vm.MCall(pc, 1);
        vm.ClearStack();
        return r0;
    }

    public static string[] GetMaps(ILuaVM vm, string asset_pack_path)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetMaps");
        pc++;
        vm.PushString(asset_pack_path);
        vm.MCall(pc, 1);
        vm.ClearStack();
        return r0;
    }

    public static string[] GetMaterials(ILuaVM vm, string asset_pack_path)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetMaterials");
        pc++;
        vm.PushString(asset_pack_path);
        vm.MCall(pc, 1);
        vm.ClearStack();
        return r0;
    }

    public static string[] GetParticles(ILuaVM vm, string asset_pack_path)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetParticles");
        pc++;
        vm.PushString(asset_pack_path);
        vm.MCall(pc, 1);
        vm.ClearStack();
        return r0;
    }

    public static string[] GetSounds(ILuaVM vm, string asset_pack_path)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetSounds");
        pc++;
        vm.PushString(asset_pack_path);
        vm.MCall(pc, 1);
        vm.ClearStack();
        return r0;
    }

    public static string[] GetSkeletalMeshes(ILuaVM vm, string asset_pack_path)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetSkeletalMeshes");
        pc++;
        vm.PushString(asset_pack_path);
        vm.MCall(pc, 1);
        vm.ClearStack();
        return r0;
    }

    public static string[] GetStaticMeshes(ILuaVM vm, string asset_pack_path)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetStaticMeshes");
        pc++;
        vm.PushString(asset_pack_path);
        vm.MCall(pc, 1);
        vm.ClearStack();
        return r0;
    }

    public static string[] GetOthers(ILuaVM vm, string asset_pack_path)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetOthers");
        pc++;
        vm.PushString(asset_pack_path);
        vm.MCall(pc, 1);
        vm.ClearStack();
        return r0;
    }

    public static void Precache(ILuaVM vm, string asset_path, int asset_type)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Assets");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "Precache");
        pc++;
        vm.PushString(asset_path);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, asset_type);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

}

