// Autogenerated by the NanosSharp Server Bindings Generator (c) 2025 DasDarki / GPLv3

using NanosSharp.API;

namespace NanosSharp.Server.Bindings;

public class BPlayer : BEntity
{
    public static void Ban(ILuaVM vm, LuaRef selfRef, string reason)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "Ban");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.PushString(reason);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void Connect(ILuaVM vm, LuaRef selfRef, string IP, string? password = null)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "Connect");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.PushString(IP);
        if (password != null)
        {
             pc++;
             vm.PushString(password);
        }
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void Kick(ILuaVM vm, LuaRef selfRef, string reason)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "Kick");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.PushString(reason);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void Possess(ILuaVM vm, LuaRef selfRef, LuaRef new_pawn, LuaRef? blend_time = null, LuaRef? exp = null)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "Possess");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, new_pawn);
        if (blend_time != null)
        {
             pc++;
             vm.RawGetI(ILuaVM.RegistryIndex, blend_time.Value);
        }
        if (exp != null)
        {
             pc++;
             vm.RawGetI(ILuaVM.RegistryIndex, exp.Value);
        }
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void StartCameraFade(ILuaVM vm, LuaRef selfRef, LuaRef from_alpha, LuaRef to_alpha, LuaRef duration, LuaRef to_color, bool? should_fade_audio = null, bool? hold_when_finished = null)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "StartCameraFade");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, from_alpha);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, to_alpha);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, duration);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, to_color);
        if (should_fade_audio != null)
        {
             pc++;
             vm.PushBoolean(should_fade_audio.Value);
        }
        if (hold_when_finished != null)
        {
             pc++;
             vm.PushBoolean(hold_when_finished.Value);
        }
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void SetManualCameraFade(ILuaVM vm, LuaRef selfRef, LuaRef in_fade_amount, LuaRef color, bool in_fade_audio)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "SetManualCameraFade");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, in_fade_amount);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, color);
        pc++;
        vm.PushBoolean(in_fade_audio);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void StopCameraFade(ILuaVM vm, LuaRef selfRef)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "StopCameraFade");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void SetCameraLocation(ILuaVM vm, LuaRef selfRef, LuaRef location)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "SetCameraLocation");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, location);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void SetCameraRotation(ILuaVM vm, LuaRef selfRef, LuaRef rotation)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "SetCameraRotation");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, rotation);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void TranslateCameraTo(ILuaVM vm, LuaRef selfRef, LuaRef location, LuaRef time, LuaRef? exp = null)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "TranslateCameraTo");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, location);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, time);
        if (exp != null)
        {
             pc++;
             vm.RawGetI(ILuaVM.RegistryIndex, exp.Value);
        }
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void RotateCameraTo(ILuaVM vm, LuaRef selfRef, LuaRef rotation, LuaRef time, LuaRef? exp = null)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "RotateCameraTo");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, rotation);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, time);
        if (exp != null)
        {
             pc++;
             vm.RawGetI(ILuaVM.RegistryIndex, exp.Value);
        }
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void SetCameraSocketOffset(ILuaVM vm, LuaRef selfRef, LuaRef socket_offset)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "SetCameraSocketOffset");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, socket_offset);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void SetCameraArmLength(ILuaVM vm, LuaRef selfRef, LuaRef length, bool force)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "SetCameraArmLength");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, length);
        pc++;
        vm.PushBoolean(force);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void SetCameraFOV(ILuaVM vm, LuaRef selfRef, LuaRef? fov = null)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "SetCameraFOV");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        if (fov != null)
        {
             pc++;
             vm.RawGetI(ILuaVM.RegistryIndex, fov.Value);
        }
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void SetCameraSpeedSettings(ILuaVM vm, LuaRef selfRef, LuaRef? max_speed = null, LuaRef? acceleration = null, LuaRef? deceleration = null, LuaRef? turning_boost = null)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "SetCameraSpeedSettings");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        if (max_speed != null)
        {
             pc++;
             vm.RawGetI(ILuaVM.RegistryIndex, max_speed.Value);
        }
        if (acceleration != null)
        {
             pc++;
             vm.RawGetI(ILuaVM.RegistryIndex, acceleration.Value);
        }
        if (deceleration != null)
        {
             pc++;
             vm.RawGetI(ILuaVM.RegistryIndex, deceleration.Value);
        }
        if (turning_boost != null)
        {
             pc++;
             vm.RawGetI(ILuaVM.RegistryIndex, turning_boost.Value);
        }
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void AttachCameraTo(ILuaVM vm, LuaRef selfRef, LuaRef actor, LuaRef socket_offset, LuaRef blend_speed)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "AttachCameraTo");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, actor);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, socket_offset);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, blend_speed);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void ResetCamera(ILuaVM vm, LuaRef selfRef)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "ResetCamera");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void Spectate(ILuaVM vm, LuaRef selfRef, LuaRef player, LuaRef? blend_speed = null)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "Spectate");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, player);
        if (blend_speed != null)
        {
             pc++;
             vm.RawGetI(ILuaVM.RegistryIndex, blend_speed.Value);
        }
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void SetName(ILuaVM vm, LuaRef selfRef, string player_name)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "SetName");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.PushString(player_name);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void SetVOIPChannel(ILuaVM vm, LuaRef selfRef, long channel)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "SetVOIPChannel");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, channel);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void SetVOIPSetting(ILuaVM vm, LuaRef selfRef, VOIPSetting voip_setting)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "SetVOIPSetting");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.PushEnum(voip_setting);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void SetVOIPVolume(ILuaVM vm, LuaRef selfRef, LuaRef volume)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "SetVOIPVolume");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, volume);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void UnPossess(ILuaVM vm, LuaRef selfRef)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "UnPossess");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static string GetSteamID(ILuaVM vm, LuaRef selfRef)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetSteamID");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        vm.MCall(pc, 1);
        var r0 = vm.ToString(-1);
        vm.Pop();
        vm.ClearStack();
        return r0;
    }

    public static string GetAccountID(ILuaVM vm, LuaRef selfRef)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetAccountID");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        vm.MCall(pc, 1);
        var r0 = vm.ToString(-1);
        vm.Pop();
        vm.ClearStack();
        return r0;
    }

    public static string GetAccountName(ILuaVM vm, LuaRef selfRef)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetAccountName");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        vm.MCall(pc, 1);
        var r0 = vm.ToString(-1);
        vm.Pop();
        vm.ClearStack();
        return r0;
    }

    public static string GetAccountIconURL(ILuaVM vm, LuaRef selfRef)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetAccountIconURL");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        vm.MCall(pc, 1);
        var r0 = vm.ToString(-1);
        vm.Pop();
        vm.ClearStack();
        return r0;
    }

    public static LuaRef? GetControlledCharacter(ILuaVM vm, LuaRef selfRef)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetControlledCharacter");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        vm.MCall(pc, 1);
        var r0 = vm.Ref(ILuaVM.RegistryIndex);
        vm.ClearStack();
        return r0;
    }

    public static string GetIP(ILuaVM vm, LuaRef selfRef)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetIP");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        vm.MCall(pc, 1);
        var r0 = vm.ToString(-1);
        vm.Pop();
        vm.ClearStack();
        return r0;
    }

    public static long GetDimension(ILuaVM vm, LuaRef selfRef)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetDimension");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        vm.MCall(pc, 1);
        var r0 = vm.Ref(ILuaVM.RegistryIndex);
        vm.ClearStack();
        return r0;
    }

    public static void SetDimension(ILuaVM vm, LuaRef selfRef, long dimension)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "SetDimension");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, dimension);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static string GetName(ILuaVM vm, LuaRef selfRef)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetName");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        vm.MCall(pc, 1);
        var r0 = vm.ToString(-1);
        vm.Pop();
        vm.ClearStack();
        return r0;
    }

    public static long GetPing(ILuaVM vm, LuaRef selfRef)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetPing");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        vm.MCall(pc, 1);
        var r0 = vm.Ref(ILuaVM.RegistryIndex);
        vm.ClearStack();
        return r0;
    }

    public static long GetVOIPChannel(ILuaVM vm, LuaRef selfRef)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetVOIPChannel");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        vm.MCall(pc, 1);
        var r0 = vm.Ref(ILuaVM.RegistryIndex);
        vm.ClearStack();
        return r0;
    }

    public static VOIPSetting GetVOIPSetting(ILuaVM vm, LuaRef selfRef)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Player");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "GetVOIPSetting");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        vm.MCall(pc, 1);
        var r0 = vm.ToEnum<VOIPSetting>(-1);
        vm.Pop();
        vm.ClearStack();
        return r0;
    }

}

