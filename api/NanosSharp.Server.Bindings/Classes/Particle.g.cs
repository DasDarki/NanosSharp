// Autogenerated by the NanosSharp Server Bindings Generator (c) 2022 DasDarki / GPLv3

using NanosSharp.API;

namespace NanosSharp.Server.Bindings;

public class Particle : Actor
{
    public static void Activate(ILuaVM vm, int selfRef, bool should_reset)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Particle");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "Activate");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.PushBoolean(should_reset);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void Deactivate(ILuaVM vm, int selfRef)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Particle");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "Deactivate");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void SetParameterFloat(ILuaVM vm, int selfRef, string parameter, double value)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Particle");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "SetParameterFloat");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.PushString(parameter);
        pc++;
        vm.PushNumber(value);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void SetParameterInt(ILuaVM vm, int selfRef, string parameter, double value)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Particle");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "SetParameterInt");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.PushString(parameter);
        pc++;
        vm.PushNumber(value);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void SetParameterBool(ILuaVM vm, int selfRef, string parameter, bool value)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Particle");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "SetParameterBool");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.PushString(parameter);
        pc++;
        vm.PushBoolean(value);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void SetParameterVector(ILuaVM vm, int selfRef, string parameter, LuaRef value)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Particle");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "SetParameterVector");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.PushString(parameter);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, value);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void SetParameterColor(ILuaVM vm, int selfRef, string parameter, LuaRef value)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Particle");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "SetParameterColor");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.PushString(parameter);
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, value);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

    public static void SetParameterMaterial(ILuaVM vm, int selfRef, string parameter, string value)
    {
        int pc = 0;
        vm.PushGlobalTable();
        vm.GetField(-1, "Particle");
        vm.GetField(-1, "__function");
        vm.GetField(-1, "SetParameterMaterial");
        pc++;
        vm.RawGetI(ILuaVM.RegistryIndex, selfRef);
        pc++;
        vm.PushString(parameter);
        pc++;
        vm.PushString(value);
        vm.MCall(pc, 0);
        vm.ClearStack();
    }

}

